boxplot.ext(xin=R2.line,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=1,line=2.5,text=c("Flow percentile (exceedence probability)"),font=2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
arrows(x0=xarrow.hi,x1=xarrow.lo,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
arrows(x0=xarrow.lo,x1=xarrow.hi,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
text(x=xtext.hi,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("high","\n","flows",sep="")))
text(x=xtext.lo,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("low","\n","flows",sep="")))
points(x=apply(R2.line,2,median),pch=4,col="green")
####################
###############################
### Plotting only three dramatic OFS (R2, NSE, KGE)
#par(mfrow=c(3,2),mar=c(3,3,1,1),oma=c(2,4,2,1))
par(mfrow=c(4,4),mar=c(3,3,1,1),oma=c(3,4,2,1))
layout(mat=matrix(c(1,2,2,3,
4,4,5,5,
6,6,7,7,
8,8,9,9),
nrow=4,ncol=4,byrow=T))
up = 100
down=-20
xloc.lab=rep(5,7)
yloc.lab=rep(95,7)
xarrow.hi = 0
xtext.hi = -5
xarrow.lo = 100
xtext.lo = 105
yarrow = -60
text.lab = c("(A)","(B)","(C)","(D)","(E)","(F)","(G)","(H)","(I)")
#BC02NSE.zero
# blank plot
plot(x=1,y=1,col="white",yaxt="n",xaxt="n",bty="n")
plotID=1
boxplot.ext(xin=BC02NSE.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text="NSE-BC02 objective function",font=2)
mtext(side=2,text=c("Relative error %"),line=2.5)
mtext(side=3,line=1,text=c("Benchmark scheme"),font=2,cex=1.2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
#points(x=apply(BC02NSE.zero,2,median),pch=4,col="green")
lines(x=apply(BC02NSE.zero,2,median),col="green",lwd=2)
#legend(x="top",legend=c("zero-error line","median percentile error"),col=c("red","green"),pch=c(NA,4),lwd=c(2,NA),pt.cex=c(NA,1.5),pt.lwd=c(NA,2))
legend(x="top",legend=c("zero-error line","median percentile error"),col=c("red","green"),lwd=c(2,2))
# blank plot
plot(x=1,y=1,col="white",yaxt="n",xaxt="n",bty="n")
plotID=2
boxplot.ext(xin=NSE.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text="NSE objective function",font=2)
mtext(side=2,text=c("Relative error %"),line=2.5)
mtext(side=3,line=0.8,text=c("Baseline schemes"),font=2,cex=1.2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(BC02NSE.zero,2,median),col="green",lwd=2)
#points(x=apply(NSE.zero,2,median),pch=4,col="green")
plotID=3
boxplot.ext(xin=NSE.line,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=3,line=0.8,text=c("Enhanced schemes"),font=2,cex=1.2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(BC02NSE.zero,2,median),col="green",lwd=2)
#points(x=apply(NSE.line,2,median),pch=4,col="green")
plotID=4
boxplot.ext(xin=KGE.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text="KGE objective function",font=2)
mtext(side=2,text=c("Relative error %"),line=2.5)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(BC02NSE.zero,2,median),col="green",lwd=2)
#points(x=apply(KGE.zero,2,median),pch=4,col="green")
plotID=5
boxplot.ext(xin=KGE.line,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(BC02NSE.zero,2,median),col="green",lwd=2)
#points(x=apply(KGE.line,2,median),pch=4,col="green")
plotID=6
boxplot.ext(xin=R2.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text=expression(bold(paste(R^2," objective function",sep=""))))
mtext(side=2,text=c("Relative error %"),line=2.5)
mtext(side=1,line=2.5,text=c("Flow percentile (exceedence probability)"),font=2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
arrows(x0=xarrow.hi,x1=xarrow.lo,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
arrows(x0=xarrow.lo,x1=xarrow.hi,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
text(x=xtext.hi,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("high","\n","flows",sep="")))
text(x=xtext.lo,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("low","\n","flows",sep="")))
lines(x=apply(BC02NSE.zero,2,median),col="green",lwd=2)
#points(x=apply(R2.zero,2,median),pch=4,col="green")
plotID=7
boxplot.ext(xin=R2.line,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=1,line=2.5,text=c("Flow percentile (exceedence probability)"),font=2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
arrows(x0=xarrow.hi,x1=xarrow.lo,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
arrows(x0=xarrow.lo,x1=xarrow.hi,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
text(x=xtext.hi,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("high","\n","flows",sep="")))
text(x=xtext.lo,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("low","\n","flows",sep="")))
lines(x=apply(BC02NSE.zero,2,median),col="green",lwd=2)
#points(x=apply(R2.line,2,median),pch=4,col="green")
####################
## PLOTTING THE FIVE REMAINI
################################
### Plotting only three dramatic OFS (R2, NSE, KGE)
#par(mfrow=c(3,2),mar=c(3,3,1,1),oma=c(2,4,2,1))
par(mfrow=c(4,4),mar=c(3,3,1,1),oma=c(3,4,2,1))
layout(mat=matrix(c(1,2,2,3,
4,4,5,5,
6,6,7,7,
8,8,9,9),
nrow=4,ncol=4,byrow=T))
up = 100
down=-20
xloc.lab=rep(5,7)
yloc.lab=rep(95,7)
xarrow.hi = 0
xtext.hi = -5
xarrow.lo = 100
xtext.lo = 105
yarrow = -60
text.lab = c("(A)","(B)","(C)","(D)","(E)","(F)","(G)","(H)","(I)")
#BC02NSE.zero
# blank plot
plot(x=1,y=1,col="white",yaxt="n",xaxt="n",bty="n")
plotID=1
boxplot.ext(xin=BC02NSE.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text="NSE-BC02 objective function",font=2)
mtext(side=2,text=c("Relative error %"),line=2.5)
mtext(side=3,line=1,text=c("Benchmark scheme"),font=2,cex=1.2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
#points(x=apply(BC02NSE.zero,2,median),pch=4,col="green")
lines(x=apply(BC02NSE.zero,2,median),col="green",lwd=2)
#legend(x="top",legend=c("zero-error line","median percentile error"),col=c("red","green"),pch=c(NA,4),lwd=c(2,NA),pt.cex=c(NA,1.5),pt.lwd=c(NA,2))
legend(x="top",legend=c("zero-error line","median percentile error"),col=c("red","green"),lwd=c(2,2))
# blank plot
plot(x=1,y=1,col="white",yaxt="n",xaxt="n",bty="n")
plotID=2
boxplot.ext(xin=NSE.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text="NSE objective function",font=2)
mtext(side=2,text=c("Relative error %"),line=2.5)
mtext(side=3,line=0.8,text=c("Baseline schemes"),font=2,cex=1.2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(NSE.zero,2,median),col="green",lwd=2)
#points(x=apply(NSE.zero,2,median),pch=4,col="green")
plotID=3
boxplot.ext(xin=NSE.line,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=3,line=0.8,text=c("Enhanced schemes"),font=2,cex=1.2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(NSE.line,2,median),col="green",lwd=2)
#points(x=apply(NSE.line,2,median),pch=4,col="green")
plotID=4
boxplot.ext(xin=KGE.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text="KGE objective function",font=2)
mtext(side=2,text=c("Relative error %"),line=2.5)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(KGE.zero,2,median),col="green",lwd=2)
#points(x=apply(KGE.zero,2,median),pch=4,col="green")
plotID=5
boxplot.ext(xin=KGE.line,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(KGE.line,2,median),col="green",lwd=2)
#points(x=apply(KGE.line,2,median),pch=4,col="green")
plotID=6
boxplot.ext(xin=R2.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text=expression(bold(paste(R^2," objective function",sep=""))))
mtext(side=2,text=c("Relative error %"),line=2.5)
mtext(side=1,line=2.5,text=c("Flow percentile (exceedence probability)"),font=2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
arrows(x0=xarrow.hi,x1=xarrow.lo,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
arrows(x0=xarrow.lo,x1=xarrow.hi,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
text(x=xtext.hi,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("high","\n","flows",sep="")))
text(x=xtext.lo,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("low","\n","flows",sep="")))
lines(x=apply(R2.zero,2,median),col="green",lwd=2)
#points(x=apply(R2.zero,2,median),pch=4,col="green")
plotID=7
boxplot.ext(xin=R2.line,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=1,line=2.5,text=c("Flow percentile (exceedence probability)"),font=2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
arrows(x0=xarrow.hi,x1=xarrow.lo,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
arrows(x0=xarrow.lo,x1=xarrow.hi,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
text(x=xtext.hi,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("high","\n","flows",sep="")))
text(x=xtext.lo,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("low","\n","flows",sep="")))
lines(x=apply(R2.line,2,median),col="green",lwd=2)
#points(x=apply(R2.line,2,median),pch=4,col="green")
####################
## PLOTTING THE FIVE REMAINING OFS (BC02NSE, BC05NSE, LOGNSE BC05KGE, NSEBIAS)
####################
## PLOTTING THE FIVE REMAINING OFS (BC02NSE, BC05NSE, LOGNSE BC05KGE, NSEBIAS)
par(mfrow=c(4,2),mar=c(3,3,1,1),oma=c(3,5,2,1))
up = 100
down=-20
xarrow.hi = 0
xtext.hi = -5
xarrow.lo = 100
xtext.lo = 105
yarrow = -60
xloc.lab=rep(10,10)
yloc.lab=rep(90,10)
text.lab = c("(A)","(B)","(C)","(D)","(E)","(F)","(G)","(H)","(I)","(J)")
# boxplot.ext(xin=sqrtNSE.zero,colouring="white",xaxt="n",ylim=c(down,up))
# abline(h=0,col="red",lty=1)
# axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
# mtext(side=2,line=4,text="NSE-BC05 objective function",font=2)
# mtext(side=2,text=c("rel. percent error"),line=2.5)
# mtext(side=3,line=1,text=c("Baseline schemes"),font=2,cex=1.2)
# text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
plotID=1
boxplot.ext(xin=sqrtNSE.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text="NSE-BC05 objective function",font=2)
mtext(side=2,text=c("Relative error %"),line=2.5)
mtext(side=3,line=1,text=c("Baseline schemes"),font=2,cex=1.2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(sqrtNSE.zero,2,median),col="green",lwd=2)
#points(x=apply(sqrtNSE.zero,2,median),pch=4,col="green")
plotID=2
boxplot.ext(xin=sqrtNSE.line,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=3,line=1,text=c("Enhanced schemes"),font=2,cex=1.2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(sqrtNSE.line,2,median),col="green",lwd=2)
legend(x="top",legend=c("zero-error line","median percentile error"),col=c("red","green"),lwd=c(2,2))
#points(x=apply(sqrtNSE.line,2,median),pch=4,col="green")
#legend(x="top",legend=c("zero-error line","median percentile error"),col=c("red","green"),pch=c(NA,4),lwd=c(2,NA),pt.cex=c(NA,1.5),pt.lwd=c(NA,2))
# plotID =3
# boxplot.ext(xin=BC02NSE.zero,colouring="white",xaxt="n",ylim=c(down,up))
# abline(h=0,col="red",lty=1)
# axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
# axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
# mtext(side=2,line=4,text="NSE-BC02 objective function",font=2)
# mtext(side=2,text=c("rel. percent error"),line=2.5)
# text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
#
# plotID=4
# boxplot.ext(xin=BC02NSE.line,colouring="white",xaxt="n",ylim=c(down,up))
# abline(h=0,col="red",lty=1)
# axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
# text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
plotID=3
boxplot.ext(xin=logNSE.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text="NSE-Log objective function",font=2)
mtext(side=2,text=c("Relative error %"),line=2.5)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(logNSE.zero,2,median),col="green",lwd=2)
#points(x=apply(logNSE.zero,2,median),pch=4,col="green")
plotID=4
boxplot.ext(xin=logNSE.line,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(logNSE.line,2,median),col="green",lwd=2)
#points(x=apply(logNSE.line,2,median),pch=4,col="green")
plotID=5
boxplot.ext(xin=sqrtKGE.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text="KGE-BC05 objective function",font=2)
mtext(side=2,text=c("Relative error %"),line=2.5)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(sqrtKGE.zero,2,median),col="green",lwd=2)
#points(x=apply(sqrtKGE.zero,2,median),pch=4,col="green")
plotID=6
boxplot.ext(xin=sqrtKGE.line,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
lines(x=apply(sqrtKGE.line,2,median),col="green",lwd=2)
#points(x=apply(sqrtKGE.line,2,median),pch=4,col="green")
plotID=7
boxplot.ext(xin=NSEBIAS.zero,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=2,line=4,text="NSE-BIAS objective function",font=2)
mtext(side=2,text=c("Relative error %"),line=2.5)
mtext(side=1,line=2.5,text=c("Flow percentile (exceedence probability)"),font=2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
arrows(x0=xarrow.hi,x1=xarrow.lo,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
arrows(x0=xarrow.lo,x1=xarrow.hi,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
text(x=xtext.hi,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("high","\n","flows",sep="")))
text(x=xtext.lo,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("low","\n","flows",sep="")))
lines(x=apply(NSEBIAS.zero,2,median),col="green",lwd=2)
#points(x=apply(NSEBIAS.zero,2,median),pch=4,col="green")
plotID=8
boxplot.ext(xin=NSEBIAS.line,colouring="white",xaxt="n",ylim=c(down,up),outline=FALSE)
abline(h=0,col="red",lty=1)
axis(side=1,at=c(0,10,20,30,40,50,60,70,80,90,100),label=c("0","10","20","30","40","50","60","70","80","90","100"))
mtext(side=1,line=2.5,text=c("Flow percentile (exceedence probability)"),font=2)
text(x=xloc.lab[plotID],y=yloc.lab[plotID],font=2,cex=1.2,labels=text.lab[plotID])
arrows(x0=xarrow.hi,x1=xarrow.lo,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
arrows(x0=xarrow.lo,x1=xarrow.hi,y0=yarrow,y1=yarrow,length=0.1,xpd=NA)
text(x=xtext.hi,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("high","\n","flows",sep="")))
text(x=xtext.lo,y=yarrow,font=1,cex=1,xpd=NA,labels=c(paste("low","\n","flows",sep="")))
lines(x=apply(NSEBIAS.line,2,median),col="green",lwd=2)
#points(x=apply(NSEBIAS.line,2,median),pch=4,col="green")
############
shiny::runApp('C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/code')
runApp('C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/code')
runApp('C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/code')
runApp('C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/code')
runApp('C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/code')
dev.off()
dev.off()
runApp('C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/code')
dev.off()
dev.off()
dev.off()
runApp('C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/code')
runApp('C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/code')
## Install 'gridExtra' package first else this won't work
#time1 = Sys.time()
##################### TEST DATA #################################
#dirname = 'C:/Users/a1654087/Box/Task1_1_PrototypeSoftware/prototype/'
dirname = 'C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/'
data_dirname = paste(dirname,'data/',sep='')
########### Data input ##############
#RData_fname = "Barossa_lowerFlaxman.csv" # Lower Flaxman (Barossa)
#RData_fname = "Barossa_lowerTanunda_1993.csv" # Part of Lower Tanunda (Barossa)
#RData_fname = "Barossa_upperJacobs.csv" # Upper Jacobs (Barossa)
#RData_fname = "Biggara_GR4J_Log_A0.csv" # Biggara (ACT)
RData_fname = "402204_SLS.csv" # Yackandandah Creek
data = read.csv(paste(data_dirname,RData_fname,sep=""),as.is=T)
#################################################################
# Source the function **step to be replaced by a package
code_dirname = paste(dirname,'code/',sep='')
source(paste(code_dirname,'main_function.R',sep=''))
opt = list(reps=100,
dirname = dirname,
title = "replicate",
obs = "obs", #3,# column number (from left to right) of the observed data
pred = "pred", #4,# data number (from left to right)  of the predicted data
date = "date", #2,# data number (from left to right)  of the dates
lambda = 0.2,
A = 0.,
meantype = "linear",
inputName = RData_fname
)
# names(opt) = c("reps","dirname","title")
# opt$reps = 100
# opt$dirname = dirname
# opt$title = "replicate"
# opt$obs = "obs"
# opt$pred = "pred"
# opt$date = "Date"
#
# opt$lambda = 0.2
# opt$A = 0
# opt$meantype = "linear"
# opt$inputName = RData_fname
## Arguments are the observed and the simulated data series as vectors
probabilisticMod(data=data, # data frame of inputs.  Note: input headings MUST be 'date', 'obs', 'pred' for the code to run (case-sensitive).
opt=opt)
dev.off()
dev.off()
## Install 'gridExtra' package first else this won't work
#time1 = Sys.time()
##################### TEST DATA #################################
#dirname = 'C:/Users/a1654087/Box/Task1_1_PrototypeSoftware/prototype/'
dirname = 'C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/'
data_dirname = paste(dirname,'data/',sep='')
########### Data input ##############
#RData_fname = "Barossa_lowerFlaxman.csv" # Lower Flaxman (Barossa)
#RData_fname = "Barossa_lowerTanunda_1993.csv" # Part of Lower Tanunda (Barossa)
#RData_fname = "Barossa_upperJacobs.csv" # Upper Jacobs (Barossa)
#RData_fname = "Biggara_GR4J_Log_A0.csv" # Biggara (ACT)
RData_fname = "402204_SLS.csv" # Yackandandah Creek
data = read.csv(paste(data_dirname,RData_fname,sep=""),as.is=T)
#################################################################
# Source the function **step to be replaced by a package
code_dirname = paste(dirname,'code/',sep='')
source(paste(code_dirname,'main_function.R',sep=''))
opt = list(reps=100,
dirname = dirname,
title = "replicate",
obs = "obs", #3,# column number (from left to right) of the observed data
pred = "pred", #4,# data number (from left to right)  of the predicted data
date = "date", #2,# data number (from left to right)  of the dates
lambda = 0.2,
A = 0.,
meantype = "linear",
inputName = RData_fname
)
# names(opt) = c("reps","dirname","title")
# opt$reps = 100
# opt$dirname = dirname
# opt$title = "replicate"
# opt$obs = "obs"
# opt$pred = "pred"
# opt$date = "Date"
#
# opt$lambda = 0.2
# opt$A = 0
# opt$meantype = "linear"
# opt$inputName = RData_fname
## Arguments are the observed and the simulated data series as vectors
probabilisticMod(data=data, # data frame of inputs.  Note: input headings MUST be 'date', 'obs', 'pred' for the code to run (case-sensitive).
opt=opt)
dev.off()
## Install 'gridExtra' package first else this won't work
#time1 = Sys.time()
##################### TEST DATA #################################
#dirname = 'C:/Users/a1654087/Box/Task1_1_PrototypeSoftware/prototype/'
dirname = 'C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/'
data_dirname = paste(dirname,'data/',sep='')
########### Data input ##############
#RData_fname = "Barossa_lowerFlaxman.csv" # Lower Flaxman (Barossa)
#RData_fname = "Barossa_lowerTanunda_1993.csv" # Part of Lower Tanunda (Barossa)
#RData_fname = "Barossa_upperJacobs.csv" # Upper Jacobs (Barossa)
#RData_fname = "Biggara_GR4J_Log_A0.csv" # Biggara (ACT)
RData_fname = "402204_SLS.csv" # Yackandandah Creek
data = read.csv(paste(data_dirname,RData_fname,sep=""),as.is=T)
#################################################################
# Source the function **step to be replaced by a package
code_dirname = paste(dirname,'code/',sep='')
source(paste(code_dirname,'main_function.R',sep=''))
opt = list(reps=100,
dirname = dirname,
title = "replicate",
obs = "obs", #3,# column number (from left to right) of the observed data
pred = "pred", #4,# data number (from left to right)  of the predicted data
date = "date", #2,# data number (from left to right)  of the dates
lambda = 0.2,
A = 0.,
meantype = "linear",
inputName = RData_fname
)
# names(opt) = c("reps","dirname","title")
# opt$reps = 100
# opt$dirname = dirname
# opt$title = "replicate"
# opt$obs = "obs"
# opt$pred = "pred"
# opt$date = "Date"
#
# opt$lambda = 0.2
# opt$A = 0
# opt$meantype = "linear"
# opt$inputName = RData_fname
## Arguments are the observed and the simulated data series as vectors
probabilisticMod(data=data, # data frame of inputs.  Note: input headings MUST be 'date', 'obs', 'pred' for the code to run (case-sensitive).
opt=opt)
## Install 'gridExtra' package first else this won't work
#time1 = Sys.time()
##################### TEST DATA #################################
#dirname = 'C:/Users/a1654087/Box/Task1_1_PrototypeSoftware/prototype/'
dirname = 'C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/'
data_dirname = paste(dirname,'data/',sep='')
########### Data input ##############
#RData_fname = "Barossa_lowerFlaxman.csv" # Lower Flaxman (Barossa)
#RData_fname = "Barossa_lowerTanunda_1993.csv" # Part of Lower Tanunda (Barossa)
#RData_fname = "Barossa_upperJacobs.csv" # Upper Jacobs (Barossa)
#RData_fname = "Biggara_GR4J_Log_A0.csv" # Biggara (ACT)
RData_fname = "402204_SLS.csv" # Yackandandah Creek
data = read.csv(paste(data_dirname,RData_fname,sep=""),as.is=T)
#################################################################
# Source the function **step to be replaced by a package
code_dirname = paste(dirname,'code/',sep='')
source(paste(code_dirname,'main_function.R',sep=''))
opt = list(reps=100,
dirname = dirname,
title = "replicate",
obs = "obs", #3,# column number (from left to right) of the observed data
pred = "pred", #4,# data number (from left to right)  of the predicted data
date = "date", #2,# data number (from left to right)  of the dates
lambda = 0.2,
A = 0.,
meantype = "linear",
inputName = RData_fname
)
# names(opt) = c("reps","dirname","title")
# opt$reps = 100
# opt$dirname = dirname
# opt$title = "replicate"
# opt$obs = "obs"
# opt$pred = "pred"
# opt$date = "Date"
#
# opt$lambda = 0.2
# opt$A = 0
# opt$meantype = "linear"
# opt$inputName = RData_fname
## Arguments are the observed and the simulated data series as vectors
probabilisticMod(data=data, # data frame of inputs.  Note: input headings MUST be 'date', 'obs', 'pred' for the code to run (case-sensitive).
opt=opt)
install.packages("C:/Users/Console/Box/Task1_1_PrototypeSoftware/Probabilistic_App/JasonPackage_0.0.0.9000.tar.gz", repos = NULL, type = "source")
